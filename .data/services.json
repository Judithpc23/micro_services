[
  {
    "id": "60e7372b-094e-479d-94bf-a8d597c98728",
    "name": "Prueba con parametros",
    "description": "----",
    "language": "python",
    "code": "def sumar():\n# Obtener parámetros desde la URL: /sumar?a=10&b=20\na = int(request.args.get('a', 0))\nb = int(request.args.get('b', 0))\nresultado = a + b\nreturn f\"La suma de {a} y {b} es: {resultado}\"",
    "type": "execution",
    "createdAt": "2025-10-11T00:59:47.301Z"
  },
  {
    "id": "10252366-827e-4794-b8c8-3597c37e8092",
    "name": "jud",
    "description": "prueba simple",
    "language": "python",
    "code": "def print():\n   return print(\"Hello\")",
    "type": "execution",
    "createdAt": "2025-10-11T01:05:20.904Z"
  },
  {
    "id": "e551dca8-f22c-4b70-a945-c778688525ed",
    "name": "holaaaa",
    "description": "hfjdks",
    "language": "python",
    "code": "def hola():\n     return \"Hola Mundo\"",
    "type": "execution",
    "createdAt": "2025-10-11T04:08:14.930Z"
  },
  {
    "id": "e7713add-ca8f-450f-b308-37b0f5290fae",
    "name": "suma",
    "description": "sumar",
    "language": "python",
    "code": "def sumar():\n     a = request.args.get('a', default=0, type=int)\n\n     b = request.args.get('b', default=0, type=int)\n\n     resultado = a + b\n\n     return f\"La suma de {a} y {b} es: {resultado}\"",
    "type": "execution",
    "createdAt": "2025-10-11T04:41:07.886Z"
  },
  {
    "id": "21db9e7e-dd30-4f6c-b22e-b9e8232d08af",
    "name": "suma",
    "description": "sumar",
    "language": "python",
    "code": "def sumar():\n    a = request.args.get('a', default=0, type=int)\n    b = request.args.get('b', default=0, type=int)\n\n    resultado = a + b\n    return f\"La suma de {a} y {b} es: {resultado}\"",
    "type": "execution",
    "createdAt": "2025-10-11T05:01:35.314Z"
  },
  {
    "id": "ace62488-fe08-4c32-a4b5-1f0532847bda",
    "name": "sumarfas",
    "description": "dsadasd",
    "language": "python",
    "code": "def sumar():\n    # Obtener parámetros desde la URL: /sumar?a=10&b=20\n    a = request.args.get('a', default=0, type=int)\n    b = request.args.get('b', default=0, type=int)\n\n    resultado = a + b\n    return f\"La suma de {a} y {b} es: {resultado}\"",
    "type": "execution",
    "createdAt": "2025-10-11T05:08:17.150Z"
  },
  {
    "id": "c7374b39-6e2a-45eb-92c3-41f716791553",
    "name": "dsadsad",
    "description": "dsadasdas",
    "language": "python",
    "code": "def sumar():\n    a = request.args.get('a', default=0, type=int)\n    b = request.args.get('b', default=0, type=int)\n\n    resultado = a + b\n    return f\"La suma de {a} y {b} es: {resultado}\"",
    "type": "execution",
    "createdAt": "2025-10-11T05:14:31.574Z"
  },
  {
    "id": "17d50a85-6e3b-46a5-ae5c-e2c66bf0a13b",
    "name": "adad",
    "description": "dadsdasd",
    "language": "python",
    "code": "def sumar():\n    a = request.args.get('a', default=0, type=int)\n    b = request.args.get('b', default=0, type=int)\n\n    resultado = a + b\n    return f\"La suma de {a} y {b} es: {resultado}\"",
    "type": "execution",
    "createdAt": "2025-10-11T05:20:57.972Z"
  },
  {
    "id": "89a8462c-6681-4346-883d-4e45bdd019ff",
    "name": "jud",
    "description": "---",
    "language": "python",
    "code": "def sumar():\n    # Obtener parámetros desde la URL: /sumar?a=10&b=20\n    a = request.args.get('a', default=0, type=int)\n    b = request.args.get('b', default=0, type=int)\n    \n    resultado = a + b\n    return f\"La suma de {a} y {b} es: {resultado}\"",
    "type": "execution",
    "createdAt": "2025-10-11T06:21:46.413Z"
  },
  {
    "id": "test-sync-1760217941750",
    "name": "Test Sync Service",
    "description": "Servicio de prueba para sincronización",
    "language": "python",
    "code": "def handler():\n    return {\"message\": \"Hello from test service\"}",
    "type": "execution",
    "createdAt": "2025-10-11T21:25:41.750Z"
  },
  {
    "id": "a93fcf81-bf2b-4497-9888-3ba312eca957",
    "name": "Test Sync Service",
    "description": "Servicio de prueba para sincronización",
    "language": "python",
    "code": "def handler():\n    return {\"message\": \"Hello from test service\"}",
    "type": "execution",
    "createdAt": "2025-10-11T21:37:08.239Z"
  },
  {
    "id": "b1280543-4609-4eb6-a808-ea39c413e08b",
    "name": "Test Roble Sync",
    "description": "Servicio de prueba para sincronización con Roble",
    "language": "python",
    "code": "def handler():\n    return {'message': 'Hello from Roble sync test'}",
    "type": "execution",
    "createdAt": "2025-10-12T20:59:58.941Z"
  },
  {
    "id": "bb294ada-4efc-469e-ba89-fb67387a5d59",
    "name": "Test Final Roble Sync",
    "description": "Servicio de prueba final para verificar sincronización",
    "language": "python",
    "code": "def handler():\n    return {'message': 'Hello from final test', 'timestamp': '2025-10-12'}",
    "type": "execution",
    "createdAt": "2025-10-12T21:44:15.286Z"
  },
  {
    "id": "e8c59c28-960a-401f-80d2-5b4f685728c5",
    "name": "Test Fixed ID Sync",
    "description": "Servicio con ID corregido para Roble",
    "language": "python",
    "code": "def handler():\n    return {'message': 'Hello from fixed ID test'}",
    "type": "execution",
    "createdAt": "2025-10-12T21:48:06.369Z"
  },
  {
    "id": "c9258714-9d76-49a5-b699-a49fb4c23d43",
    "name": "Test Roble Insertion 1760305899706",
    "description": "Servicio de prueba para verificar sincronización con Roble",
    "language": "python",
    "code": "def handler():\n    return {\n        \"message\": \"Hello from Roble test\",\n        \"timestamp\": \"2025-10-12T21:51:39.706Z\",\n        \"service\": \"test-roble-insertion\"\n    }",
    "type": "execution",
    "createdAt": "2025-10-12T21:51:39.722Z"
  },
  {
    "id": "37de8d61-abae-44ae-be85-958e79841e00",
    "name": "Test Roble Insertion 1760306073592",
    "description": "Servicio de prueba para verificar sincronización con Roble",
    "language": "python",
    "code": "def handler():\n    return {\n        \"message\": \"Hello from Roble test\",\n        \"timestamp\": \"2025-10-12T21:54:33.592Z\",\n        \"service\": \"test-roble-insertion\"\n    }",
    "type": "execution",
    "createdAt": "2025-10-12T21:54:33.606Z"
  },
  {
    "id": "bd39cf60-3287-4010-a343-2a9e237e64de",
    "name": "Unique Test Service 20251012165507",
    "description": "Servicio único para verificar inserción en Roble",
    "language": "python",
    "code": "def handler():\n    return {'message': 'Unique test service', 'timestamp': '2025-10-12T16:55:07'}",
    "type": "execution",
    "createdAt": "2025-10-12T21:55:07.745Z"
  }
]