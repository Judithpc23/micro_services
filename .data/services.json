[
  {
    "id": "5bb40d2f-3c00-480b-939e-94b5d74aaa86",
    "name": "hola",
    "description": "dadadad",
    "language": "python",
    "code": "def hola():\n    return \"hola\"",
    "type": "roble",
    "tableName": "microservices",
    "createdAt": "2025-10-13T04:46:44.195Z"
  },
  {
    "id": "e1208190-d415-4f62-90bf-d55626ed16d2",
    "name": "dddd",
    "description": "ssss",
    "language": "python",
    "code": "def main():\n    records = read_data()\n    return {\n        \"message\": \"Roble microservice executed successfully\",\n        \"records_count\": len(records),\n        \"status\": \"completed\"\n    }",
    "type": "roble",
    "tableName": "microservices",
    "robleMode": "current",
    "createdAt": "2025-10-14T07:29:21.929Z"
  },
  {
    "id": "e3153fdf-2ff6-4291-a772-021962964e88",
    "name": "juddd",
    "description": "hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh",
    "language": "javascript",
    "code": "// Roble Microservice - JavaScript\n// This service can interact with your Roble database\n\nasync function main() {\n    try {\n        // Example: Read all records from the table\n        const records = await readData();\n        console.log(`Found ${records.length} records`);\n        \n        // Process the records as needed\n        for (const record of records) {\n            console.log(`Record ID: ${record._id}`);\n            console.log('Data:', record);\n        }\n        \n        return {\n            message: 'Roble microservice executed successfully',\n            recordsCount: records.length,\n            status: 'completed'\n        };\n    } catch (error) {\n        console.error('Error in microservice:', error);\n        return {\n            message: 'Error executing microservice',\n            error: error.message,\n            status: 'error'\n        };\n    }\n}\n\n// Available helper functions:\n// - readData(filters): Read records from the table\n// - insertData(records): Insert new records  \n// - updateData(recordId, updates): Update a specific record\n// - deleteData(recordId): Delete a specific record",
    "type": "roble",
    "tableName": "microservices",
    "robleMode": "current",
    "createdAt": "2025-10-14T07:39:44.782Z"
  },
  {
    "id": "06338fc5-34a0-4b23-9e84-96f00574627c",
    "name": "prueba roble",
    "description": "kkkkkkkkkkkkkkkkkkkk",
    "language": "python",
    "code": "# Roble Microservice - Python\n# This service can interact with your Roble database\n\ndef main():\n    # Example: Read all records from the table\n    records = read_data()\n    print(f\"Found {len(records)} records\")\n    \n    # Process the records as needed\n    for record in records:\n        print(f\"Record ID: {record.get('_id')}\")\n        print(f\"Data: {record}\")\n    \n    return {\n        \"message\": \"Roble microservice executed successfully\",\n        \"records_count\": len(records),\n        \"status\": \"completed\"\n    }\n\n# Available helper functions:\n# - read_data(filters=None): Read records from the table\n# - insert_data(records): Insert new records\n# - update_data(record_id, updates): Update a specific record\n# - delete_data(record_id): Delete a specific record",
    "type": "roble",
    "tableName": "microservices",
    "robleMode": "current",
    "createdAt": "2025-10-14T13:27:35.662Z"
  }
]